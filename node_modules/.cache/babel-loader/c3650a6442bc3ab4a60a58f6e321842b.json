{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive\\\\Documents\\\\React\\\\books-crud\\\\src\\\\components\\\\AddPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Alert, InputGroup, Button } from \"react-bootstrap\";\nimport PostDataService from \"../services/post.services\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddPost = _ref => {\n  _s();\n\n  let {\n    id,\n    setPostId\n  } = _ref;\n  const [title, setTitle] = useState(\"\");\n  const [post, setPost] = useState(\"\"); // const [status, setStatus] = useState(\"Available\");\n\n  const [flag, setFlag] = useState(true);\n  const [message, setMessage] = useState({\n    error: false,\n    msg: \"\"\n  }); //whenever we interact with the firebase it returns a promise\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMessage(\"\");\n\n    if (title === \"\" || post === \"\") {\n      setMessage({\n        error: true,\n        msg: \"All fields are mandatory!\"\n      });\n      return;\n    }\n\n    const newPost = {\n      title,\n      post\n    };\n    console.log(newPost);\n\n    try {\n      if (id !== undefined && id !== \"\") {\n        await PostDataService.updatePost(id, newPost);\n        setPostId(\"\");\n        setMessage({\n          error: false,\n          msg: \"Post Updated successfully!\"\n        });\n      } else {\n        await PostDataService.addPost(newPost);\n        setMessage({\n          error: false,\n          msg: \"New Post added successfully!\"\n        });\n      }\n    } catch (err) {\n      setMessage({\n        error: true,\n        msg: err.message\n      });\n    }\n\n    setTitle(\"\");\n    setPost(\"\");\n  };\n\n  const editHandler = async () => {\n    setMessage(\"\");\n\n    try {\n      const docSnap = await PostDataService.getPost(id);\n      console.log(\"the record is :\", docSnap.data());\n      setTitle(docSnap.data().title);\n      setPost(docSnap.data().post); // setStatus(docSnap.data().status);\n    } catch (err) {\n      setMessage({\n        error: true,\n        msg: err.message\n      });\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"The id here is : \", id);\n\n    if (id !== undefined && id !== \"\") {\n      editHandler();\n    }\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 box\",\n      children: [(message === null || message === void 0 ? void 0 : message.msg) && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: message !== null && message !== void 0 && message.error ? \"danger\" : \"success\",\n        dismissible: true,\n        onClose: () => setMessage(\"\"),\n        children: message === null || message === void 0 ? void 0 : message.msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formPostTitle\",\n          children: /*#__PURE__*/_jsxDEV(InputGroup, {\n            children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n              id: \"formPostTitle\",\n              children: \"B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Post Title\",\n              value: title,\n              onChange: e => setTitle(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formPost\",\n          children: /*#__PURE__*/_jsxDEV(InputGroup, {\n            children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n              id: \"formPost\",\n              children: \"A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Write a post\",\n              value: post,\n              onChange: e => setPost(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-grid gap-2\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"Submit\",\n            children: \"Post/ Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(AddPost, \"hgpzSKBHFnBiGaDJkdSmifGbEbE=\");\n\n_c = AddPost;\nexport default AddPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPost\");","map":{"version":3,"names":["React","useState","useEffect","Form","Alert","InputGroup","Button","PostDataService","AddPost","id","setPostId","title","setTitle","post","setPost","flag","setFlag","message","setMessage","error","msg","handleSubmit","e","preventDefault","newPost","console","log","undefined","updatePost","addPost","err","editHandler","docSnap","getPost","data","target","value"],"sources":["C:/Users/hp/OneDrive/Documents/React/books-crud/src/components/AddPost.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Form, Alert, InputGroup, Button } from \"react-bootstrap\";\nimport PostDataService from \"../services/post.services\";\n\nconst AddPost = ({ id, setPostId }) => {\n  const [title, setTitle] = useState(\"\");\n  const [post, setPost] = useState(\"\");\n  // const [status, setStatus] = useState(\"Available\");\n  const [flag, setFlag] = useState(true);\n  const [message, setMessage] = useState({ error: false, msg: \"\" });\n\n  //whenever we interact with the firebase it returns a promise\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setMessage(\"\");\n    if (title === \"\" || post === \"\") {\n      setMessage({ error: true, msg: \"All fields are mandatory!\" });\n      return;\n    }\n    const newPost = {\n      title,\n      post,\n    };\n    console.log(newPost);\n\n    try {\n      if (id !== undefined && id !== \"\") {\n        await PostDataService.updatePost(id, newPost);\n        setPostId(\"\");\n        setMessage({ error: false, msg: \"Post Updated successfully!\" });\n      } else {\n        await PostDataService.addPost(newPost);\n        setMessage({ error: false, msg: \"New Post added successfully!\" });\n      }\n    } catch (err) {\n      setMessage({ error: true, msg: err.message });\n    }\n\n    setTitle(\"\");\n    setPost(\"\");\n  };\n\n  const editHandler = async () => {\n    setMessage(\"\");\n    try {\n      const docSnap = await PostDataService.getPost(id);\n      console.log(\"the record is :\", docSnap.data());\n      setTitle(docSnap.data().title);\n      setPost(docSnap.data().post);\n      // setStatus(docSnap.data().status);\n    } catch (err) {\n      setMessage({ error: true, msg: err.message });\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"The id here is : \", id);\n    if (id !== undefined && id !== \"\") {\n      editHandler();\n    }\n  }, [id]);\n  return (\n    <>\n      <div className=\"p-4 box\">\n        {message?.msg && (\n          <Alert\n            variant={message?.error ? \"danger\" : \"success\"}\n            dismissible\n            onClose={() => setMessage(\"\")}\n          >\n            {message?.msg}\n          </Alert>\n        )}\n\n        <Form onSubmit={handleSubmit}>\n          <Form.Group controlId=\"formPostTitle\">\n            <InputGroup>\n              <InputGroup.Text id=\"formPostTitle\">B</InputGroup.Text>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Post Title\"\n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n              />\n            </InputGroup>\n          </Form.Group>\n          {/* className=\"mb-3\" */}\n          <Form.Group controlId=\"formPost\">\n            <InputGroup>\n              <InputGroup.Text id=\"formPost\">A</InputGroup.Text>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Write a post\"\n                value={post}\n                onChange={(e) => setPost(e.target.value)}\n              />\n            </InputGroup>\n          </Form.Group>\n          <div className=\"d-grid gap-2\">\n            <Button variant=\"primary\" type=\"Submit\">\n              Post/ Update\n            </Button>\n          </div>\n        </Form>\n      </div>\n    </>\n  );\n};\n\nexport default AddPost;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}